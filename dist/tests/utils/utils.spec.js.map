{"version":3,"file":"utils.spec.js","names":["utils","describe","test","valid","invalid","validFlag","isNullOrUndefined","invalidFlag","expect","toBeTruthy","toBeFalsy","substitionDict","replaced","replaceSpecialCharacters","toBe","trim","removeWhiteSpace","invalidRule","removeSpecialChars","resultInvalid","clone"],"sources":["../../../src/tests/utils/utils.spec.js"],"sourcesContent":["import utils from \"../../utils/utils\";\n\ndescribe(\"UTILS\", () => {\n  test(\"Test isNullOrUndefined function\", () => {\n    const valid = null;\n    const invalid = \"algo\";\n\n    let validFlag = utils.isNullOrUndefined(valid);\n    let invalidFlag = utils.isNullOrUndefined(invalid);\n\n    expect(validFlag).toBeTruthy();\n    expect(invalidFlag).toBeFalsy();\n  });\n\n  test(\"Test replaceSpecialCharacters function\", () => {\n    utils.substitionDict = true;\n    const valid = \"ãéìöùçñ\";\n\n    let replaced = utils.replaceSpecialCharacters(valid);\n    expect(replaced).toBe(\"aeioucn\");\n  });\n\n  test(\"Test removeWhiteSpace function\", () => {\n    const valid = \"aaaa            bbbbbbb        cccccc  \";\n    const invalid = \"\"; \n\n    let trim = utils.removeWhiteSpace(valid);\n    let invalidRule = utils.removeWhiteSpace(invalid);\n    expect(trim).toBe(\"aaaabbbbbbbcccccc\");\n    expect(invalidRule).toBe(\"\");\n  });\n\n  test(\"Test removeSpecialChars function\", () => {\n    const valid = \"ABCDEF\";\n    const invalid = \"AB@C!D%E*F\";\n\n    let validFlag = utils.removeSpecialChars(valid);\n    let invalidFlag = utils.removeSpecialChars(invalid);\n\n    expect(validFlag).toBe(\"ABCDEF\");\n    expect(invalidFlag).toBe(\"ABCDEF\");\n  });\n\n  test(\"Test clone function\", () =>{\n    const resultInvalid = utils.clone(null);\n    expect(resultInvalid).toBe(null);\n  });\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,mBAAmB;AAErCC,QAAQ,CAAC,OAAO,EAAE,MAAM;EACtBC,IAAI,CAAC,iCAAiC,EAAE,MAAM;IAC5C,IAAMC,KAAK,GAAG,IAAI;IAClB,IAAMC,OAAO,GAAG,MAAM;IAEtB,IAAIC,SAAS,GAAGL,KAAK,CAACM,iBAAiB,CAACH,KAAK,CAAC;IAC9C,IAAII,WAAW,GAAGP,KAAK,CAACM,iBAAiB,CAACF,OAAO,CAAC;IAElDI,MAAM,CAACH,SAAS,CAAC,CAACI,UAAU,CAAC,CAAC;IAC9BD,MAAM,CAACD,WAAW,CAAC,CAACG,SAAS,CAAC,CAAC;EACjC,CAAC,CAAC;EAEFR,IAAI,CAAC,wCAAwC,EAAE,MAAM;IACnDF,KAAK,CAACW,cAAc,GAAG,IAAI;IAC3B,IAAMR,KAAK,GAAG,SAAS;IAEvB,IAAIS,QAAQ,GAAGZ,KAAK,CAACa,wBAAwB,CAACV,KAAK,CAAC;IACpDK,MAAM,CAACI,QAAQ,CAAC,CAACE,IAAI,CAAC,SAAS,CAAC;EAClC,CAAC,CAAC;EAEFZ,IAAI,CAAC,gCAAgC,EAAE,MAAM;IAC3C,IAAMC,KAAK,GAAG,yCAAyC;IACvD,IAAMC,OAAO,GAAG,EAAE;IAElB,IAAIW,IAAI,GAAGf,KAAK,CAACgB,gBAAgB,CAACb,KAAK,CAAC;IACxC,IAAIc,WAAW,GAAGjB,KAAK,CAACgB,gBAAgB,CAACZ,OAAO,CAAC;IACjDI,MAAM,CAACO,IAAI,CAAC,CAACD,IAAI,CAAC,mBAAmB,CAAC;IACtCN,MAAM,CAACS,WAAW,CAAC,CAACH,IAAI,CAAC,EAAE,CAAC;EAC9B,CAAC,CAAC;EAEFZ,IAAI,CAAC,kCAAkC,EAAE,MAAM;IAC7C,IAAMC,KAAK,GAAG,QAAQ;IACtB,IAAMC,OAAO,GAAG,YAAY;IAE5B,IAAIC,SAAS,GAAGL,KAAK,CAACkB,kBAAkB,CAACf,KAAK,CAAC;IAC/C,IAAII,WAAW,GAAGP,KAAK,CAACkB,kBAAkB,CAACd,OAAO,CAAC;IAEnDI,MAAM,CAACH,SAAS,CAAC,CAACS,IAAI,CAAC,QAAQ,CAAC;IAChCN,MAAM,CAACD,WAAW,CAAC,CAACO,IAAI,CAAC,QAAQ,CAAC;EACpC,CAAC,CAAC;EAEFZ,IAAI,CAAC,qBAAqB,EAAE,MAAK;IAC/B,IAAMiB,aAAa,GAAGnB,KAAK,CAACoB,KAAK,CAAC,IAAI,CAAC;IACvCZ,MAAM,CAACW,aAAa,CAAC,CAACL,IAAI,CAAC,IAAI,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC"}